Sam Vernaza
Project 6
Write up

For project number 6 we were to implement our first introduction to pure virtual methods. This assignment deemed challenging for me because I felt that the description wasn’t as clear as it could have been. The notes were definitely helpful, but they were also vague and left some confusion for me. I feel like I’m walking away from this assignment not sure what to take away from it because I was able to complete it, but I’d be lying if I didn’t say it was by luck and some added help from others. The program starts by creating a pure virtual method in the vehicle header file. This serves as a reference and script for the car.cpp file. First the program starts by calling the correct constructors. It creates the derived default constructor. It does this by invoking the Car constructor. This would not have been possible if we tried to use the Vehicle constructor because a virtual constructor cannot be created. We can however create one virtually through the derived class, which will give us access to all of the components of our virtual base class. The program then uses the virtual move function for the move class. Because we’re using the pure virtual function it then references the derived class’s move function since it is invoked through the derived class’s object. It essentially does this through the virtual table by accessing the virtual function located in the derived class. It cooperates as the function specifies in the Car class. Next we test the insertion operator for the base class through the Car object. Since the derived class is a base class it is able to use the operator overload method and it knows how to display the contents of the car object correctly because the operator overloaded looks at the Car object passed in as a Vehicle due to the virtual nature of the Serialize method. The program then shows us that we can use the Base Class (vehicle) pointers to  access the virtual move function through our 3 Car objects stored in the base class pointer array. We pass it the same LLA for each member of the vehicles_array and thus the cars move to all of the same locations. The program ends by testing the insertion operator for the Base Class pointers. It then outputs the values in the vehicle_array at each index and outputs the LLA originally stored values in the car objects. The program then outputs a “Test’s done” prompt. This assignment was confusing and incredibly hard to follow. If given more time I would spend more time with a TA who knew what they were doing. I had 2 TA’s have no clue how to use virtual functions and they ended up only confusing me more.  If I had more time I would definitely read more on this topic before starting as I found myself constantly stuck not understanding what was going on.  Out of curiosity, if there was a way to have an evaluation sheet or a check your learning after each assignment as they get progressively harder that would be really amazing or at least better feedback after assignments are graded. The topics are starting to get more complex and they really need to be explained more thoroughly to the student as we progress through these more challenging topics. I coded all of this myself and didn’t copy any code from external resources and I researched a lot of information prior to coding this, but I couldn’t see the relation between this assignment and what we coded. I’m seeking as much clarification as possible because to me, how I feel right now, is that it was very unnecessary to code a virtual function. I don’t feel like we saved much code, but I guess I’m missing something. I will clarify what this project was about with the professor, but sometime I feel like it’s better when the professor here’s it from his assistants and graders as well. I think sometimes it comes across as a student complaining. I’m not, I’m just looking for clarification. Thank you.

